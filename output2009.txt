SELECT me.ts FROM newctmlmap.segment_detector_events me WHERE ( ( detector_id ~ ? AND event ~ ? AND ( ts < ? AND ts >= ? ) ) ) GROUP BY me.ts ORDER BY ts: 'vdsid', 'observed|imputed', '2010-01-01 00:00:00', '2009-01-01 00:00:00'
1 rows inserted for time 2009-01-01 00:00:06 at generate_versioned_segments.pl line 136
1 rows inserted into component set for time 2009-01-01 00:00:06 to time 2009-01-01 00:00:08 at generate_versioned_segments.pl line 145
1 rows inserted for time 2009-01-01 00:00:08 at generate_versioned_segments.pl line 136
2 rows inserted into component set for time 2009-01-01 00:00:08 to time 2009-01-01 00:00:30 at generate_versioned_segments.pl line 145
1 rows inserted for time 2009-01-01 00:00:30 at generate_versioned_segments.pl line 136
3 rows inserted into component set for time 2009-01-01 00:00:30 to time 2009-01-01 00:00:52 at generate_versioned_segments.pl line 145
0E0 rows inserted for time 2009-01-01 00:00:52 at generate_versioned_segments.pl line 136
3 rows inserted into component set for time 2009-01-01 00:00:52 to time 2009-01-01 00:01:00 at generate_versioned_segments.pl line 145
1 rows inserted for time 2009-01-01 00:01:00 at generate_versioned_segments.pl line 136
4 rows inserted into component set for time 2009-01-01 00:01:00 to time 2009-01-01 00:03:28 at generate_versioned_segments.pl line 145
0E0 rows inserted for time 2009-01-01 00:03:28 at generate_versioned_segments.pl line 136
4 rows inserted into component set for time 2009-01-01 00:03:28 to time 2009-01-01 00:49:00 at generate_versioned_segments.pl line 145
1 rows inserted for time 2009-01-01 00:49:00 at generate_versioned_segments.pl line 136
5 rows inserted into component set for time 2009-01-01 00:49:00 to time 2009-01-01 01:00:00 at generate_versioned_segments.pl line 145
713 rows inserted for time 2009-01-01 01:00:00 at generate_versioned_segments.pl line 136
1320 rows inserted into component set for time 2009-01-01 01:00:00 to time 2009-01-01 01:08:00 at generate_versioned_segments.pl line 145
1 rows inserted for time 2009-01-01 01:08:00 at generate_versioned_segments.pl line 136
1321 rows inserted into component set for time 2009-01-01 01:08:00 to time 2009-01-01 02:00:00 at generate_versioned_segments.pl line 145
416 rows inserted for time 2009-01-01 02:00:00 at generate_versioned_segments.pl line 136
1613 rows inserted into component set for time 2009-01-01 02:00:00 to time 2009-01-01 02:05:00 at generate_versioned_segments.pl line 145
2 rows inserted for time 2009-01-01 02:05:00 at generate_versioned_segments.pl line 136
1614 rows inserted into component set for time 2009-01-01 02:05:00 to time 2009-01-01 03:00:00 at generate_versioned_segments.pl line 145
325 rows inserted for time 2009-01-01 03:00:00 at generate_versioned_segments.pl line 136
1838 rows inserted into component set for time 2009-01-01 03:00:00 to time 2009-01-01 04:00:00 at generate_versioned_segments.pl line 145
216 rows inserted for time 2009-01-01 04:00:00 at generate_versioned_segments.pl line 136
1966 rows inserted into component set for time 2009-01-01 04:00:00 to time 2009-01-01 05:00:00 at generate_versioned_segments.pl line 145
214 rows inserted for time 2009-01-01 05:00:00 at generate_versioned_segments.pl line 136
2095 rows inserted into component set for time 2009-01-01 05:00:00 to time 2009-01-01 05:45:00 at generate_versioned_segments.pl line 145
3 rows inserted for time 2009-01-01 05:45:00 at generate_versioned_segments.pl line 136
2084 rows inserted into component set for time 2009-01-01 05:45:00 to time 2009-01-01 06:00:00 at generate_versioned_segments.pl line 145
DBI Exception: DBD::Pg::db do failed: ERROR:  duplicate key value violates unique constraint "versioned_detector_segment_geometry_pkey" [for Statement "
insert into tempseg.versioned_detector_segment_geometry
(detector_id,components,refnum,direction,seggeom)
WITH vrr AS (
select aa.*,
   nextval('tempseg.versioned_detector_ordering_sequence_id_seq') as versioned_sequence_id
  from (
   select a.*
   from  tempseg.detector_route_relation a
   join
   (
     select detector_id
     from newctmlmap.segment_detector_events bb
     where ? >= bb.ts
     and   ? < bb.endts
     and event ~* 'observed|imputed'
     and detector_id ~* 'vdsid'
   ) b using (detector_id)
   order by detector_sequence_id
  ) aa
)
select qq.detector_id,qq.components,qq.refnum,qq.direction,qq.seggeom
from (
SELECT q.pdist,q.ptsec,q.ndist,q.detector_id,q.components,q.versioned_sequence_id,q.refnum,q.relation_direction as direction,
       CASE WHEN ptsec <= ntsec
                 THEN ST_line_substring( q.rls, q.ptsec,q.ntsec )
                 ELSE
                    case
                      WHEN mydist > q.pdist then ST_line_substring( q.rls, q.ptsec, 1 )
                      WHEN mydist < q.pdist then ST_line_substring( q.rls, 0, q.ntsec )
                    end
            END AS seggeom
       FROM
       (
          SELECT distinct vrrb.detector_id,array[p.detector_id,vrrb.detector_id,n.detector_id] as components,vrrb.versioned_sequence_id,vrrb.refnum,vrrb.relation_direction,
             vrrb.line AS rls,
             vrrb.dist AS mydist,
             vrrb.numline AS myline,
             p.dist AS pdist,
             CASE WHEN p.dist IS NOT NULL
                  THEN (vrrb.dist+p.dist)/2
                  ELSE 0
             END AS ptsec,
             n.dist AS ndist,
             CASE WHEN n.dist IS NOT NULL
                  THEN (vrrb.dist+n.dist)/2
                  ELSE 1
             END AS ntsec
          FROM vrr vrrb
          LEFT JOIN vrr p
               ON ( vrrb.versioned_sequence_id=p.versioned_sequence_id+1 AND vrrb.refnum=p.refnum AND vrrb.relation_direction=p.relation_direction AND vrrb.numline=p.numline)
          LEFT JOIN vrr n
               ON ( n.versioned_sequence_id=vrrb.versioned_sequence_id+1 AND vrrb.refnum=n.refnum AND vrrb.relation_direction=n.relation_direction AND vrrb.numline=n.numline)
          LEFT JOIN tempseg.numbered_route_lines rl on (rl.refnum=vrrb.refnum and vrrb.relation_direction=rl.direction)

          LEFT OUTER JOIN tempseg.versioned_detector_segment_geometry existing ON (
                          existing.components = array[p.detector_id,vrrb.detector_id,n.detector_id])
          WHERE existing.components is null

          ORDER BY vrrb.versioned_sequence_id
       ) q
  ORDER BY refnum, direction, versioned_sequence_id
) qq
WHERE geometrytype(qq.seggeom) !~* 'point'
"] at /usr/lib64/perl5/site_perl/5.12.2/DBIx/Class/Schema.pm line 1061
	DBIx::Class::Schema::throw_exception('Testbed::Spatial::VDS::Schema::OSM::TempSeg=HASH(0x4b77b80)', 'DBI Exception: DBD::Pg::db do failed: ERROR:  duplicate key v...') called at /usr/lib64/perl5/site_perl/5.12.2/DBIx/Class/Storage.pm line 119
	DBIx::Class::Storage::throw_exception('DBIx::Class::Storage::DBI::Pg=HASH(0x37b9f68)', 'DBI Exception: DBD::Pg::db do failed: ERROR:  duplicate key v...') called at /usr/lib64/perl5/site_perl/5.12.2/DBIx/Class/Storage/DBI.pm line 1268
	DBIx::Class::Storage::DBI::__ANON__('DBD::Pg::db do failed: ERROR:  duplicate key value violates u...', 'DBI::db=HASH(0x50e9518)', undef) called at /home/james/repos/carb/perl/lib/OSM/NumRoutes.pm line 205
	OSM::NumRoutes::__ANON__('DBIx::Class::Storage::DBI::Pg=HASH(0x37b9f68)', 'DBI::db=HASH(0x50e9518)', '2009-01-01 06:00:00') called at /usr/lib64/perl5/site_perl/5.12.2/DBIx/Class/Storage/DBI.pm line 755
	DBIx::Class::Storage::DBI::__ANON__() called at /usr/lib64/perl5/site_perl/5.12.2/Try/Tiny.pm line 71
	eval {...} called at /usr/lib64/perl5/site_perl/5.12.2/Try/Tiny.pm line 67
	Try::Tiny::try('CODE(0x50f6bb8)', 'Try::Tiny::Catch=REF(0x50f6930)') called at /usr/lib64/perl5/site_perl/5.12.2/DBIx/Class/Storage/DBI.pm line 766
	DBIx::Class::Storage::DBI::dbh_do(undef, undef, '2009-01-01 06:00:00') called at /home/james/repos/carb/perl/lib/OSM/NumRoutes.pm line 209
	OSM::NumRoutes::automated_versioned_segment_insert('OSM::NumRoutes=HASH(0x1b3c660)', '2009-01-01 06:00:00') called at generate_versioned_segments.pl line 135
